# Adding some quarkus native image configs...so it'll actually work
quarkus.native.additional-build-args=--initialize-at-run-time=io.opentelemetry.sdk.trace.AndroidFriendlyRandomIdGenerator\\,io.opentelemetry.exporter.otlp.trace.OtlpGrpcSpanExporterBuilder\\,io.grpc.netty.shaded.io.netty.handler.ssl.ConscryptAlpnSslEngine\\,io.grpc.netty.shaded.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator\\,io.grpc.netty.shaded.io.netty.handler.ssl.JettyNpnSslEngine\\,io.grpc.netty.shaded.io.netty.util.internal.logging.Log4JLogger\\,io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2FrameWriter\\,io.grpc.netty.shaded.io.netty.handler.codec.http.HttpObjectEncoder\\,io.grpc.netty.shaded.io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator$1\\,io.grpc.netty.shaded.io.netty.handler.ssl.SslContextBuilder

# gRPC Server Configs
quarkus.grpc.server.port=9009
quarkus.grpc.server.host=localhost

# gRPC Client Configs
# These configs tell where the gRPC service is listening
quarkus.grpc.clients.hello.host=localhost
quarkus.grpc.clients.hello.port=9009

# Port for the Server's client interface
quarkus.http.port=8081